name: Build and Push Docker Images

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test_backend:
    runs-on: self-hosted
    steps:
    - name: Check out the code
      uses: actions/checkout@v4

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'
        cache-dependency-path: ./CotOAgent-Back/pnpm-lock.yaml

    - name: Install dependencies
      run: cd CotOAgent-Back && pnpm install --frozen-lockfile

    - name: Run tests
      run: cd CotOAgent-Back && pnpm run test

    - name: Run lint
      run: cd CotOAgent-Back && pnpm run lint

  test_frontend:
    runs-on: self-hosted
    steps:
    - name: Check out the code
      uses: actions/checkout@v4

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'
        cache-dependency-path: ./CotOAgent-Front/pnpm-lock.yaml

    - name: Install dependencies
      run: cd CotOAgent-Front && pnpm install --frozen-lockfile

    - name: Run tests
      run: cd CotOAgent-Front && pnpm run test

    - name: Run lint
      run: cd CotOAgent-Front && pnpm run lint

  build_and_push_backend_to_dockerhub:
    needs: [test_backend]
    runs-on: self-hosted
    steps:
    - name: Check out the code
      uses: actions/checkout@v4

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKER_CONTAINER_USERNAME }}
        password: ${{ secrets.DOCKER_CONTAINER_TOKEN3 }}
          
    - name: Build and push API to DockerHub
      run: |
        docker build \
          -f ./CotOAgent-Back/Dockerfile \
          -t ${{ vars.DOCKER_CONTAINER_USERNAME }}/cotoagent-api:${{ github.run_number }}.${{ github.run_attempt }} \
          ./CotOAgent-Back

        docker push -q ${{ vars.DOCKER_CONTAINER_USERNAME }}/cotoagent-api:${{ github.run_number }}.${{ github.run_attempt }}
  
  
  build_and_push_frontend_to_dockerhub:
    needs: [test_frontend]
    runs-on: self-hosted
    steps:
    - name: Check out the code
      uses: actions/checkout@v4
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKER_CONTAINER_USERNAME }}
        password: ${{ secrets.DOCKER_CONTAINER_TOKEN3 }}

    - name: Build and push Web to DockerHub
      run: |
        docker build \
          -f ./CotOAgent-Front/Dockerfile \
          -t ${{ vars.DOCKER_CONTAINER_USERNAME }}/cotoagent-web:${{ github.run_number }}.${{ github.run_attempt }} \
          --build-arg VITE_API_URL="${{ vars.VITE_API_URL }}" \
          ./CotOAgent-Front

        docker push -q ${{ vars.DOCKER_CONTAINER_USERNAME }}/cotoagent-web:${{ github.run_number }}.${{ github.run_attempt }}

  deploy_to_kubernetes:
    needs: [build_and_push_backend_to_dockerhub, build_and_push_frontend_to_dockerhub]
    runs-on: self-hosted
    steps:
    - name: Check out the code. 
      uses: actions/checkout@v4
 
    - name: deploy to kubernetes
      run: |
        export KUBECONFIG=$HOME/.kube/config
        kubectl apply -f kube/namespace.yml
        export CONTAINER_VERSION=${{ github.run_number }}.${{ github.run_attempt }}
        export AI_SERVER=${{ vars.AI_SERVER }}
        export JWK_URI=${{ vars.JWK_URI }}
        export AI_Token=${{ secrets.AI_TOKEN }}
        for FILE in "kube"/*
        do
          cat "$FILE" | envsubst | kubectl apply -f -
        done